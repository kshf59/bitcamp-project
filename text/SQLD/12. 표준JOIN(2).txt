OUTER JOIN

    - JOIN 조건에서 동일한 값이 없는 행도 반환할때 사용

-------------------------------------------------------------------------------------------------------------------------------------

LEFT OUTER JOIN
   
    - 먼저 표기된 좌측 테이블에 해당하는 데이터를 먼저 읽은 후, 나중 표기된 우측 테이블에서 JOIN 대상 데이터를 읽음
        즉 TABLE A 와 B가 있을때 (TABLE 'A'가 기준)
    - LEFT JOIN으로 OUTER 키워드를 생략할 수 있음
    - STADIUM에 등록된 운동장 중에는 홈팀이 없는 경기장도 있다.
      STADIUM과 TEAM을 JOIN 하되 홈팀이 없는 경기장의 정보도 같이 출력하도록 한다.

      SELECT STADIUM_NAME, STADIUM.STADIUM_ID, SEAT_COUNT, HOMETEAM_ID, TEAM_NAME
      FROM STADIUM LEFT OUTER JOIN TEAM
      ON STADIUM.HOMETEAM_ID = TEAM.TEAM_ID
      ORDER BY HOMETEAM_ID;

RIGHT OUTER JOIN

    - 나중에 표기된 우측 테이블에 해당하는 데이터를 먼저 읽은 후, 먼저 표기된 좌측 테이블에서 JOIN대상 데이터를 읽음
        즉 TABLE A 와 B가 있을 때 (TABLE'B'가 기준)
    - RIGHT JOIN으로 OUTER 키워드를 생략할 수 있음
    - DEPT에 등록된 부서 중에는 사원이 없는 부서도 있다. DEPT와 EMP를 조인하되 사원이 없는 부서 정보도 같이 출력하도록 한다.
    
      SELECT E.ENAME, D.DEPTNO, D.DNAME
      FROM EMP E RIGHT OUTER JOIN DEPT D
      ON E.DEPTNO = D.DEPTNO;

-------------------------------------------------------------------------------------------------------------------------------------

FULL OUTER JOIN

    - 좌측, 우측 테이블의 모든 데이터를 읽어 JOIN하여 결과를 생성
    - 즉, TABLE A와 B가 있을 때 (TABLE 'A','B' 모두 기준이 됨)
       RIGHT,LEFT JOIN 합집합의 결과 나옴
    - FULL JOIN으로 OUTER 키워드를 생략해서 사용 가능
    - UPDATE DEPT_TEMP SET DEPTNO = DEPTNO + 20; // 실습을 위한 조인

      SELECT * FROM DEPT FULL OUTER JOIN DEPT_TEMP
      ON DEPT.DEPTNO = DEPT_TEMP.DEPTNO;
        - INNER JOIN 이라면 부서번호가 동일한 30,40 부서의 2개의 정보만 출력
        - FULL OUTER JOIN을 사용하였으므로 DEPT 테이블에만 있는 부서번호 10,20 부서와
          DEPT_TEMP 테이블에만 있는 부서번호 50,60의 부서 정보가 출력

      SELECT L.DEPTNO, L.DNAME, L.LOC, R.DEPTNO, R.DNAME, R.LOC
      FROM DEPT L LEFT OUTER JOIN DEPT_TEMP R ON L.DEPTNO = R.DEPTNO
      UNION
      SELECT L.DEPTNO, L.DNAME, L.LOC, R.DEPTNO, R.DNAME, R.LOC
      FROM DEPT L RIGHT OUTER JOIN DEPT_TEMP R ON L.DEPTNO = R.DEPTNO;