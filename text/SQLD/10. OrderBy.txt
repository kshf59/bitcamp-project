ORDER BY 정렬

    주요개념
        - SQL 문장으로 조회된 데이터들을 다양한 목적에 맞게 특정 칼럼을 기준으로 정렬하여 출력하는데 사용
        - ORDER BY 절에 칼럼명 대신에 SELECT 절에서 사용한 ALIAS 명이나 칼럼 순서를 나타내는 정수도 사용 가능
        - 별도로 정렬 방식을 지정하지 않으면 기본적으로 오름차순이 적용되며, SQL 문장의 제일 마지막에 위치

        SELECT 칼럼명 [ALIAS명]
        FROM 테이블명
        [WHERE 조건식]
        [GROUP BY 칼럼 이나 표현식]
        [HAVING 그룹조건식]
        [ORDER BY 칼럼 이나 표현식 [ASC 또는 DESC]]

    실습
        - SELECT PLAYER_NAME 선수명, POSITION 포지션, BACK_NO 백넘버 FROM PLAYER ORDER BY PLAYER_NAME DESC;
        - SELECT PLAYER_NAME 선수명, POSITION 포지션, BACK_NO 백넘버 FROM PLAYER ORDER BY 포지션 DESC;

-------------------------------------------------------------------------------------------------------------------------------------

특징

    - 기본적인 정렬 순서는 오름차순(ASC)
        - 숫자형 데이터 타입은 가장 작은 값부터 출력
        - 날짜형 데이터 타입은 날짜 값이 가장 빠른 갑시 먼저 출력
    - Oracle 에서는 NULL 값을 가장 큰 값으로 간주하여 오름차순으로 정렬 했을 경우에는 가장 마지막에, 내림차순으로 정렬했을 경우에는
      가장 먼저 위치
        - 반면 SQL SERVER에서는 반대
    
    - 여러개의 컬럼을 기준으로 정렬
        - SELECT PLAYER_NAME 선수이름, POSITION 포지션, BACK_NO 백넘버, HEIGHT 키 FROM PLAYER WHERE HEIGHT IS NOT NULL
        - SELECT PLAYER_NAME 선수이름, POSITION 포지션, BACK_NO 백넘버 FROM PLAYER WHERE BACK_NO IS NOT NULL
          ORDER BY 3 DESC, 2, 1;

-------------------------------------------------------------------------------------------------------------------------------------

ORDER BY 표시 방법

    - 칼럼명 사용
        - SELECT DNAME, LOC, DEPTNO FROM DEPT
          ORDER BY DNAME, LOC, DETNO, DESC;
    - 칼럼명 + ALIAS 사용
        - SELECT DNAME DEPT, LOC AREA, DEPTNO FROM DEPT
          ORDER BY DNAME, AREA, DEPTNO DESC;
    - 칼럼 순서번호 + ALIAS 사용
        - SELECT DNAME, LOC AREA, DEPTNO FROM DEPT
          ORDER BY 1, AREA, 3 DESC;
            >> 1은 DNAME, 3은 DEPTNO

-------------------------------------------------------------------------------------------------------------------------------------

SELECT 문장 수행 단계

    5. SELECT 칼럼명 // 데이터 값을 출력,계산
    1. FROM 테이블명 // 발췌 대상 테이블 참조
    2. WHERE 조건식 // 발췌 대상 데이터가 아닌 것은 제거
    3. GROUP BY 칼럼 이나 표현식 // 행동을 소그룹화
    4. HAVING 그룹조건식 // 그룹핑된 값의 조건에 맞는 것만을 출력
    6. ORDER BY 칼럼이나 표현식 // 정렬

-------------------------------------------------------------------------------------------------------------------------------------

주의사항(1) : SELECT 와 ORDER BY

    - SELECT EMPNO, ENAME FROM EMP ORDER BY MGR;
    - ORDER BY 절에 SELECT 절에 없는 내용이 나와도 괜찮음
        - 예외적인 상황임, FROM 절에 없는 내용을 뒤에서는 원래 다룰 수 없음
        - 단 SELECT DISTINCT를 지정하거나 SQL 문장에 GROUP BY 절이 있거나 또는 SELECT 문에
          UNION 연산자가 있으면 열 정의가 SELECT 절에 표시 되어야 함
    - 관계형 데이터베이스가 데이터를 메모리에 올릴 때
      행 단위로 모든 칼럼을 가져오는 것이므로,
      SELECT 절에서 일부 칼럼만 선택하더라도
      ORDER BY 절에서 메모리에 올라와 있는
      다른 칼럼의 데이터를 사용할 수 있음

주의사항(2) : 인라인 뷰

    - SELECT EMPNO FROM
      (SELECT EMPNO, ENMAE FROM EMP ORDER BY MGR);
        - 인라인 뷰 의 칼럼을 메인 쿼리에서도 사용 가능
    - SELECT MGR FROM
      (SELECT EMPNO, ENMAE FROM EMP ORDER BY MGR);
        - 인라인 뷰에 없는 것을 메인 쿼리에서는 사용할수 없음

주의사항(3) : GROUP BY

    - SELECT JOB, SAL FROM EMP GROUP BY JOB HAVING COUNT(*) > 0 ORDER BY SAL;
    - SELECT JOB FROM EMP GROUP BY JOB HAVING COUNT(*) > 0 ORDER BY SAL;
        - GROUP BY 절을 쓰게 되면, 여기에 사용된 칼럼을 기반으로 새로운 데이터 집합을 생성하게 됨
            (FROM 절처럼 테이블을 통째로 가져오지 않음)
        - 그러므로 GROUP BY에서 지정하지 않은 칼럼을 SELECT나 ORDER BY에 쓰면 인식이 되지 않음
    
    - SELECT JOB FROM EMP GROUP BY JOB HAVING COUNT(*) > 0
      ORDER BY MAX(EMPNO), MAX(MGR), SUM(SAL), COUNT(DEPTNO), MAX(HIREDATE);

-------------------------------------------------------------------------------------------------------------------------------------

TOP N 쿼리

ROWNUM (Oracle의 TOP N 쿼리)
    - ORACLE 에서 순위가 높은 N개의 ROW를 추출하기 위한 방법
    - ORACLE의 경우 정렬이 완료된 후 데이터의 일부가 출력되는 것이 아니라,
      데이터의 일부가 먼저 추출된 후 (ORDER BY 절은 결과 집합을 결정하는데 관여하지 않음)
      데이터에 대한 정렬 작업이 일어나게 됨
    - SELECT ENAME, SAL FROM EMP WHERE ROWNUM < 4
      ORDER BY SAL DESC;
        - 급여가 높은 3명의 데이터를 원했지만 잘못된 결과가 나옴
    - SELECT ENAME, SAL
      FROM (SELECT ENAME, SAL FROM EMP ORDER BY SAL DESC)
      WHERE ROWNUM < 4;
        - 정렬된 데이터를 추출 후, 그중에서 상위3개 선정

TOP(N) (SQL SERVER의 TOP N 쿼리)
    - SELECT TOP(2) ENAME, SAL FROM EMP ORDER BY SAL DESC;
        - ORACLE과 달리 별도로 인라인 뷰를 만들 필요가 없음
        - 상위 2건의 데이터가 출력
    - SELECT TOP(2) WITH TIES ENAME, SAL FROM EMP
      ORDER BY SAL DESC;
        - WITH TIES : 같은 수치를 갖는 데이터가 있으면 다 출력하라는 뜻
        - 여기서는 3건의 데이터 가 출력됨 (SCOTT과 FORD 의 급여가 공동 2위로 같음)    
