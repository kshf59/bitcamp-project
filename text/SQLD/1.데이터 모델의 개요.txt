정보화 시스템 구축
- 현실세계에서 일어나는 사건들을 전산화하기 위한것
- 정보화 시스템 과정에서 구축된 데이터베이스는 현실 세계의 특정 부분을 반영
- 너무 복잡하기 때문에 현실 세계를 그대로 반영하지는 못함
- 현실 세계를 개념화, 단순화하여 가시적으로 표현

데이터 모델링
- 현실세계의 업무적인 프로세서를 물리적으로 데이터베이스화하기 위한 과정
- 실체와 관계를 중심으로 체계적으로 표현하고 문서화 하는 기법
- 정보 시스템의 중심을 데이터의 관점에서 접근하는 데이터 중심의 분석 방법
- 어떤 데이터가 존재하며 업무에서 필요로 하는 정보가 무엇인지를 분석하는 과정

데이터 모델링의 주요 목적
1. 업무 정보를 구성하는데 기초가 되는 정보를 일정한 표기법으로 표현함으로써 정보시스템 구축 대상이 되는 업무 내용을 정확하게 분석하는 것이다.
2. 분석된 모델을 가지고 실제 데이터베이스를 생성하여 개발 및 데이터 관리에 사용하기 위한 것이다.


-------------------------------------------------------------------------------------------------------------------------------------


데이터 모델링을 하기 위해서는 엔티티, 관계, 속성에 대한 이해가 필요
1. 업무가 관여하는 어떤것 (ENTITY) -table
2. 업무가 관여하는 어떤것 간의 관계 (RELATION)
3. 어떤 것이 가지는 성격(ATTRIBUTE)

엔티티
- 데이터베이스에 자료로 표현하려는 것
- 사람이 생각하는 개념이나 정보단위 같은 현실세계의 대상체
- 유형 무형의 정보
- 서로 연관된 몇개의 속성으로 구성
ex) 부서 엔티티, 사원 엔티티

속성
-데이터의 가장작은 논리적 단위
- 하나의 엔티티는 한개이상의 속성으로 구성
- 각 속성은 엔티티의 특성, 상태 등을 기술
ex) 부서 엔티티의 속성 : 부서 번호, 부서명, 위치
    사원 엔티티의 속성 : 사원번호, 이름, 주소, 소속부서

관계
- 엔티티와 엔티티 혹은 엔티티와 속성 간의 연관성을 관계라고 함
- 일반적으로 동사형으로 표현
ex) 사원이 부서에 소속되어 있다.

-------------------------------------------------------------------------------------------------------------------------------------


          정보모델링                 데이터 모델링
현실세계  ----------------> 개념세계 ----------------> 컴퓨터세계
        개념적 데이터 모델            논리적 데이터 모델
        ----------------             ---------------
        개체 관계 모델                관계 데이터 모델
                                     계층 데이터 모델
                                     네트워크 데이터 모델

개념적 데이터 모델
- 현실세계에 존재하는 데이터를 의미 있는 엔티티와 엔티티 내의 공통된 속성과 엔티티들 사이의
  관계를 정의 하는 추상화 과정
- 현실세계를 추상화하여 개념적으로 표현하여 이해하기 쉽게 할 뿐 아니라 의사소통을 원할하게
  하게 해주는 과정을 의미
- 정보 모델링이라고 함
- 개체관계모델(E-R Model): 기술된 엔티티 타입과 이 엔티티 타입들 간의 관계를 이용하여 현실세계를
  표현하는 가장 대표적인 개념적 데이터 모델

논리적 데이터 모델
- 개념적 데이터 모델은 DBMS가 직접 이해 할수가 없음
- 컴퓨터가 이해할 수 있도록 논리적 데이터 모델로 변환해야함
- 논리적 데이터 모델은 데이터 모델링 이라고함
- 관계데이터 모델, 계층 데이터 모델, 네트워크 데이터 모델 등이 있음

개념적 데이터 모델링
- 현실 세계에 존재하는 엔티티를 인간이 이해살수 있는 정보 구조로 표현하는 과정
- 정보 모델링 이라고도 함
- 대표적인 것 : 1976년 Peter Chen 에 의해 제안된 개체 관계 모델

E-R 다이어 그램
- 엔티티와 이들 간의 관계를 알기 쉽게 미리 약속된 도형을 사용하여 일목요연 하게 표현

엔티티 타입
- 정보가 저장 될수 있는 사람, 장소, 사물 사건 등과 같이 독립적으로 존재하면서 고유하게 식별이 가능한 실세계읜 엔티티
- 사원처럼 실체가 있는 것도 있지만 생각이나 개념과 같이 추상적인것
- 동일한 속성들을 가진 엔티티들의 틀
- 엔티티들은 엔티티 타입으로 분류

-------------------------------------------------------------------------------------------------------------------------------------

엔티티와 속성
- ERD 에서 속성은 엔티티 집합을 나타내는 직사각형에 실선으로 연결된 타원형으로 표현

속성의 유형
- 단순 속성과 복합속성
- 단일 값 속성과 다중 값 속성
- 유도 속성과 저장 속성
- null 속성

단순 속성 - 더이상 작은 구성원소로 분해 할수 없는 속성
복합 속성 - 몇개의 기본적인 단순 속성으로 분해할 수있는 속성
           ex) 주소 - 기본주소, 상세주소, 우편번호
               입사일 - 년, 월, 일
단일 값 속성 - 각 엔티티에 대해 하나의 값만 갖는것
다중 값 속성 - 한 엔티티에 대해서 여러 개의 값을 갖는 것
유도 속성 - 속성의 값이 다른 속성이나 엔티티가 가지고 있는 값으로부터 유도되어 결정되는 경우
저장 속성 - 유도 속성을 생성하는데 사용된 속성
            ex) 저장속성 생년월일   유도속성 나이
널 속성 - 널 값을 갖는 속성
          어느 특정 속성에 대한 값을 가지고 있지 않을 때 이를 명시적으로 표시하기 위해 사용

-------------------------------------------------------------------------------------------------------------------------------------

관계 타입
- 엔티티 관계 모델에서 엔티티 사이의 연관성을 표현하는 개념
- 두개의 엔티티 사이의 업무적인 연관성을 논리적으로 표현한 것
- 관계를 정의 할 때 동사구로 관계를 정의
- 엔티티 집합(타입)들 사이의 대응(correspondence) 즉 사상(mapping)을 의미

관계 집합
- 한 관계 타입에 속하는 모든 관계 인스턴스를 말함
- ERD에서 엔티티들 사이의 관계 타입은 마름모를 사용하여 표현한 후 그 관계에 연관된 엔티티에 선으로 연결하여 표시

관계의 유형
- 관계에 참여하는 하나의 엔티티에 대해 다른 엔티티가 몇개 참여하는지를 나타내는것
- 카디날리티(cardinality : 관계의 대응 엔티티 수)라고도 함

카디날리티
- 하나의 관계에 실제로 참여할 수 있는 인스턴스의 수를 의미
- 표현방법: 일대일, 일대다, 다대다

카디날리티 비율의 최소값과 최대값
- 비율에 최소값과 최대값을 표시하여 관계의 유형을 좀 더 명확하게 나타 낼수 있음
- ER 다이어그램에서 최소값과 최대값은 관계 타입과 엔티티 타입을 연결하는 실선위에 (min, max) 형태로 표기

-------------------------------------------------------------------------------------------------------------------------------------

키(key) 속성
- 간단히 키라고함
- 각 엔티티 인스턴스를 유일하게 식별하는데 사용

키가 필요한 예
- "한예슬" 이란 사원의 주소가 필요한데 "한예슬"이란 이름을 갖고 있는 사원이 2명이라면 둘중에 어느 사원을 원하는 것인지 알수 없는 경우

-------------------------------------------------------------------------------------------------------------------------------------

강한 엔티티 타입
- 엔티티 타입 내에서 자신의 키를 사용하여 고유하게 엔티티들을 식별할 수 있는 엔티티 타입
- 독립 엔티티, 부모 엔티티라, 정규 엔티티 타입이라고도 함
- 독자적으로 존재

약한 엔티티 타입
- 키를 형성하기에 충분한 속성들을 갖지 못한것
- 자기 자신의 속성만으로는 키를 명세할 수 없는 엔티티
- 종속 엔티티, 자식 엔티티라고함
- 소유 엔티티 타입이 있어야 존재
- 소유 엔티티 타입을 식별 엔티티 타입이라고 부름

구별자(discriminator)
- 약한 엔티티 타입을 구별하기 위해서 사용되는 이름은 단독으로 엔티티를 구분할 수 없다는 속성

부분키(partial key)
- 구별자는 강한 엔티티와 연관된 약한 엔티티 집합 내에서만 서로 구별할 수있음

-------------------------------------------------------------------------------------------------------------------------------------

ISA 관계
- 상위 엔티티와 하위 엔티티 간의 관계를 의미
- 특정 엔티티는 서로 구별되는 여러 하위 엔티티로 나누어질 수 있음

-------------------------------------------------------------------------------------------------------------------------------------

논리적 데이터 모델링
- 개념적 모델링 과정에서 얻은 개념적 구조를 컴퓨터 환경에 맞도록 변환하는 과정
- 데이터 모델링 이라고도 함

논리적 데이터 모델링 목적
- 개념적 설계에서 추출된 실체와 속성들의 관계를 관계형 데이터베이스 이론에 맞게 구조적으로 설계하는 단계(스키마의 설계)
- 정확한 업무 분석을 통한 자료의 흐름을 분석하여 실체와 속성들의 관계를 구조적으로 설계

-------------------------------------------------------------------------------------------------------------------------------------

계층 데이터 모델
- 데이터를 저장하는 단위(entity)의 구조가 상하 종속적인 관계로 구성

네트워크 데이터 모델
- CODASYL이 제안(CODASYL DBTG모델이라고도 함)
- 그래프를 이용해서 데이터 논리구조를 표현한 데이터 모델
- 상위와 하위 레코드 사이에서 다대다(N:M) 대응 관계를 만족하는 구조

관계 데이터 모델
- 계층 모델과 망 모델의 복잡한 구조를 단순화 시킨 모델
- 표를 이용해서 데이터 상호관계를 정의하는 구조

-------------------------------------------------------------------------------------------------------------------------------------

학습 정리

데이터 모델
- 현실세계를 데이터 베이스로 구축하기 위한 중간 과정, 즉 데이터베이스 설계 과정에서 현실 세계의 정보를 컴퓨터에 표현하기 위해서 단순화, 추상화하여
  체계적으로 데이터의 구조를 표현하기 위해 사용되는 도구

개념적 데이터 모델
- 현실세계에 존재하는 데이터를 의미있는 엔티티와 엔티티 내의 공통된 속성과 엔티티 사이의 관계를 정의하는 추상화 과정

논리적 데이터 모델
- 개념적 구조를 컴퓨터에서 처리하기 위해서는 컴퓨터가 이해할 수있도록 변환

데이터 모델의 구성요소
- 데이터의 구조
- 연산
- 제약조건

엔티티관계 모델
- 엔티티 타입과 이들간의 관계 타입을 이용해 현실 세계를 개념적으로 표현한 개념적 데이터 모델중 가장 대표적인 모델링 방법

ER 다이어 그램
- 엔티티와 이들간의 관계를 일목요연하게 표현하기 위해서 알기 쉽게 미리 약속된 도형을 사용하여 표기하는 방법

카디날리티
- 1:1(일대일)
- 1:N(일대다)
- N:M(다대다)

논리적 데이터 모델
- 관계 데이터 모델
    릴레이션, 테이블의 집합으로 표현
- 네트워크 데이터 모델
    데이터 구조가 그래프 형태
    사이클을 허용하는 구조
    오너(owner)-멤버(member)관계
- 계층적 데이터 모델
    데이터 구조가 트리 형태
    사이클이 없는 구조
    부모 자식 관계